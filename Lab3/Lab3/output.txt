[j]  visitCompUnit
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] funcA0 1 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 3 12
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Stmt If
[j]  visitCond
[j]  visitExp
[j]  visitExp [info] RelOp
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 5 7
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 5
[j]  visitExp [info] after exp1 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 0 5
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 7 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 7 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 7
[j]  visitExp [info] after exp1 cast
[j]  visitStmt [info] Stmt Else
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 10 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 10 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 3 10
[j]  visitExp [info] after exp1 cast
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 13 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 13 11
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] funcA1 16 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 18 12
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Stmt If
[j]  visitCond
[j]  visitExp
[j]  visitExp [info] RelOp
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 20 7
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 20
[j]  visitExp [info] after exp1 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 0 20
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 22 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 22 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 22
[j]  visitExp [info] after exp1 cast
[j]  visitStmt [info] Stmt Else
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 25 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 25 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 3 25
[j]  visitExp [info] after exp1 cast
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 28 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 28 11
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] funcA2 31 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 33 12
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Stmt If
[j]  visitCond
[j]  visitExp
[j]  visitExp [info] RelOp
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 35 7
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 35
[j]  visitExp [info] after exp1 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 0 35
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 37 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 37 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 37
[j]  visitExp [info] after exp1 cast
[j]  visitStmt [info] Stmt Else
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 40 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 40 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 3 40
[j]  visitExp [info] after exp1 cast
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 43 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 43 11
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] funcA3 46 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 48 12
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Stmt If
[j]  visitCond
[j]  visitExp
[j]  visitExp [info] RelOp
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 50 7
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 50
[j]  visitExp [info] after exp1 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 0 50
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 52 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 52 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 52
[j]  visitExp [info] after exp1 cast
[j]  visitStmt [info] Stmt Else
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 55 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 55 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 3 55
[j]  visitExp [info] after exp1 cast
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 58 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 58 11
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] funcB 61 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 63 12
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Stmt If
[j]  visitCond
[j]  visitExp
[j]  visitExp [info] RelOp
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 65 7
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 65
[j]  visitExp [info] after exp1 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 1 65
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 67 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 67 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 67
[j]  visitExp [info] after exp1 cast
[j]  visitStmt [info] Stmt Else
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 70 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 70 12
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 3 70
[j]  visitExp [info] after exp1 cast
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 73 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 73 11
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] go 76 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitArray
[j]  visitObcArray
[j]  visitObcArray [info] x 1 78 8
[j]  visitObcArray [info] exp before cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 16 78
[j]  visitObcArray [info] exp after cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 0 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 1 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 2 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 3 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 4 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 5 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 6 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 7 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 8 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 9 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 10 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 11 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 12 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 13 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 14 78
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 15 78
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg2 79 12
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 1 80
[j]  visitBlockItem
[j]  visitDecl
[j]  visitVarDecl
[j]  visitVarDef
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 1 81
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 83 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 83 11
[j]  visitBlockItem
[j]  visitStmt
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 85 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 85 8
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 87 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 87 11
[j]  visitBlockItem
[j]  visitStmt
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 89 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 89 8
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 91 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 91 11
[j]  visitBlockItem
[j]  visitStmt
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 93 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 93 8
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 95 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 95 11
[j]  visitBlockItem
[j]  visitStmt
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] a 97 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 97 8
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] output_var 99 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] x 99 17
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] a 99 19
[j]  visitBlockItem
[j]  visitStmt
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Stmt While
[j]  visitCond
[j]  visitExp
[j]  visitExp [info] RelOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] time 102 10
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 0 102
[j]  visitStmt
[j]  visitStmt [info] Stmt block
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg1 104 8
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] b 104 15
[j]  visitBlockItem
[j]  visitStmt
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] b 106 8
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] arg1 106 12
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] time 107 8
[j]  visitExp
[j]  visitExp [info] BinOp
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] time 107 15
[j]  visitExp [info] after exp0 cast
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 1 107
[j]  visitExp [info] after exp1 cast
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] output_var 110 4
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] x 110 17
[j]  visitExp
[j]  visitExp [info] lval
[j]  visitLval
[j]  visitLval [info] b 110 19
[j]  visitBlockItem
[j]  visitStmt
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit: func
[j]  visitFuncDef
[j]  visitFuncDef [info] main 114 0
[j]  visitFuncDef [info] block_node before cast
[j]  visitBlock
[j]  visitBlockItem
[j]  visitStmt
[j]  visitStmt [info] Assign
[j]  visitLval
[j]  visitLval [info] arg2 116 4
[j]  visitExp
[j]  visitExp [info] number
[j]  visitNumber
[j]  visitNumber [info] 82 116
[j]  visitBlockItem
[j]  visitStmt
[j]  visitFuncDef [info] block_node after cast
[j]  visitCompUnit [info] return result
in[j]  ConstantPropagator.cpp runOnModule 782
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
============
[j]  Function: funcA0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
[j]  Function: funcA0 changed the state
[j]  global_state: ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
  }
}

============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
============
[j]  Function: funcA0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA2
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA3
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = mul i32 %a3, 3
[j]  BinaryOperator:   %3 = mul i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = mul i32 %a2, 2
[j]  BinaryOperator:   %2 = mul i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = mul i32 %a3, 3
[j]  BinaryOperator:   %3 = mul i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = mul i32 %a2, 2
[j]  BinaryOperator:   %2 = mul i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: go
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: cond
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: body
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %16 = icmp slt i32 %a8, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %17 = icmp sge i32 %a8, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %18 = or i1 %17, %16
[j]  BinaryOperator:   %18 = or i1 %17, %16
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x15 = load i32, ptr %25, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %x = alloca [16 x i32], align 4
  %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
  store i32 0, ptr %0, align 4
  %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
  store i32 1, ptr %1, align 4
  %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
  store i32 2, ptr %2, align 4
  %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
  store i32 3, ptr %3, align 4
  %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
  store i32 4, ptr %4, align 4
  %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
  store i32 5, ptr %5, align 4
  %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
  store i32 6, ptr %6, align 4
  %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
  store i32 7, ptr %7, align 4
  %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
  store i32 8, ptr %8, align 4
  %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
  store i32 9, ptr %9, align 4
  %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
  store i32 10, ptr %10, align 4
  %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
  store i32 11, ptr %11, align 4
  %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
  store i32 12, ptr %12, align 4
  %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
  store i32 13, ptr %13, align 4
  %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
  store i32 14, ptr %14, align 4
  %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
  store i32 15, ptr %15, align 4
  %a = alloca i32, align 4
  %arg2 = load i32, ptr @arg2, align 4
  store i32 %arg2, ptr %a, align 4
  %b = alloca i32, align 4
  store i32 1, ptr %b, align 4
  %time = alloca i32, align 4
  store i32 1, ptr %time, align 4
  %a1 = load i32, ptr %a, align 4
  store i32 %a1, ptr @arg1, align 4
  call void @funcA0()
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  store i32 %a2, ptr @arg1, align 4
  call void @funcA1()
  %arg13 = load i32, ptr @arg1, align 4
  store i32 %arg13, ptr %a, align 4
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  call void @funcA2()
  %arg15 = load i32, ptr @arg1, align 4
  store i32 %arg15, ptr %a, align 4
  %a6 = load i32, ptr %a, align 4
  store i32 %a6, ptr @arg1, align 4
  call void @funcA3()
  %arg17 = load i32, ptr @arg1, align 4
  store i32 %arg17, ptr %a, align 4
  %a8 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = alloca [16 x i32], align 4
[j]  Other inst:   %x = alloca [16 x i32], align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %1, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %2, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 3, ptr %3, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %4, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 5, ptr %5, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %6, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %7, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 8, ptr %8, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 9, ptr %9, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 10, ptr %10, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 11, ptr %11, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 12, ptr %12, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 13, ptr %13, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 14, ptr %14, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 15, ptr %15, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg2 = load i32, ptr @arg2, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time = alloca i32, align 4
[j]  Other inst:   %time = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a1, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA0()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a2, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA1()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg13 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg13, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA2()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg15 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg15, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a6 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a6, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA3()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg17 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg17, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a8 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a8 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %16 = icmp slt i32 %a8, 0
[j]  icmp:   %16 = icmp slt i32 %a8, 0
[j]  val1: 0 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %17 = icmp sge i32 %a8, 16
[j]  icmp:   %17 = icmp sge i32 %a8, 16
[j]  val1: 0 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %18 = or i1 %17, %16
[j]  BinaryOperator:   %18 = or i1 %17, %16
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a1 = load i32, ptr %a, align 4 -> 0 
    %time = alloca i32, align 4 -> 1 
    %b = alloca i32, align 4 -> 1 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> 0 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %x9 = load i32, ptr %19, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
  }
}

[j]  worklist after push :
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  @output_var = global i32 0 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x15 = load i32, ptr %25, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  @output_var = global i32 0 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %17 = icmp sge i32 %a8, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %18 = or i1 %17, %16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
  }
}

[j]  worklist after push :
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
  }
}

[j]  worklist after push :
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a1 = load i32, ptr %a, align 4 -> 0 
    %time = alloca i32, align 4 -> 1 
    %b = alloca i32, align 4 -> 1 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %a8 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
  }
}

[j]  worklist after push :
[j]  Function: go changed the state
[j]  global_state: ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
  @arg1 = global i32 0 -> TOP
  }
}

============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
============
[j]  Function: funcA0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA2
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA3
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = mul i32 %a3, 3
[j]  BinaryOperator:   %3 = mul i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = mul i32 %a2, 2
[j]  BinaryOperator:   %2 = mul i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = mul i32 %a3, 3
[j]  BinaryOperator:   %3 = mul i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = mul i32 %a2, 2
[j]  BinaryOperator:   %2 = mul i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: go
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: cond
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: body
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %16 = icmp slt i32 %a8, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %17 = icmp sge i32 %a8, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %18 = or i1 %17, %16
[j]  BinaryOperator:   %18 = or i1 %17, %16
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x15 = load i32, ptr %25, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %x = alloca [16 x i32], align 4
  %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
  store i32 0, ptr %0, align 4
  %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
  store i32 1, ptr %1, align 4
  %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
  store i32 2, ptr %2, align 4
  %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
  store i32 3, ptr %3, align 4
  %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
  store i32 4, ptr %4, align 4
  %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
  store i32 5, ptr %5, align 4
  %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
  store i32 6, ptr %6, align 4
  %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
  store i32 7, ptr %7, align 4
  %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
  store i32 8, ptr %8, align 4
  %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
  store i32 9, ptr %9, align 4
  %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
  store i32 10, ptr %10, align 4
  %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
  store i32 11, ptr %11, align 4
  %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
  store i32 12, ptr %12, align 4
  %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
  store i32 13, ptr %13, align 4
  %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
  store i32 14, ptr %14, align 4
  %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
  store i32 15, ptr %15, align 4
  %a = alloca i32, align 4
  %arg2 = load i32, ptr @arg2, align 4
  store i32 %arg2, ptr %a, align 4
  %b = alloca i32, align 4
  store i32 1, ptr %b, align 4
  %time = alloca i32, align 4
  store i32 1, ptr %time, align 4
  %a1 = load i32, ptr %a, align 4
  store i32 %a1, ptr @arg1, align 4
  call void @funcA0()
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  store i32 %a2, ptr @arg1, align 4
  call void @funcA1()
  %arg13 = load i32, ptr @arg1, align 4
  store i32 %arg13, ptr %a, align 4
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  call void @funcA2()
  %arg15 = load i32, ptr @arg1, align 4
  store i32 %arg15, ptr %a, align 4
  %a6 = load i32, ptr %a, align 4
  store i32 %a6, ptr @arg1, align 4
  call void @funcA3()
  %arg17 = load i32, ptr @arg1, align 4
  store i32 %arg17, ptr %a, align 4
  %a8 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = alloca [16 x i32], align 4
[j]  Other inst:   %x = alloca [16 x i32], align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %1, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %2, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 3, ptr %3, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %4, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 5, ptr %5, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %6, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %7, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 8, ptr %8, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 9, ptr %9, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 10, ptr %10, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 11, ptr %11, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 12, ptr %12, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 13, ptr %13, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 14, ptr %14, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 15, ptr %15, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg2 = load i32, ptr @arg2, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time = alloca i32, align 4
[j]  Other inst:   %time = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a1, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA0()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a2, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA1()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg13 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg13, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA2()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg15 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg15, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a6 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a6, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA3()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg17 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg17, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a8 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a8 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %16 = icmp slt i32 %a8, 0
[j]  icmp:   %16 = icmp slt i32 %a8, 0
[j]  val1: 0 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %17 = icmp sge i32 %a8, 16
[j]  icmp:   %17 = icmp sge i32 %a8, 16
[j]  val1: 0 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %18 = or i1 %17, %16
[j]  BinaryOperator:   %18 = or i1 %17, %16
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a1 = load i32, ptr %a, align 4 -> 0 
    %time = alloca i32, align 4 -> 1 
    %b = alloca i32, align 4 -> 1 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> 0 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %x9 = load i32, ptr %19, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
  }
}

[j]  worklist after push :
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  @output_var = global i32 0 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x15 = load i32, ptr %25, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  @output_var = global i32 0 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %17 = icmp sge i32 %a8, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %18 = or i1 %17, %16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
  }
}

[j]  worklist after push :
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
  }
}

[j]  worklist after push :
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a1 = load i32, ptr %a, align 4 -> 0 
    %time = alloca i32, align 4 -> 1 
    %b = alloca i32, align 4 -> 1 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 0 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg15 = load i32, ptr @arg1, align 4 -> 0 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg2 = load i32, ptr @arg2, align 4 -> 0 
  @arg1 = global i32 0 -> 0 
    %a8 = load i32, ptr %a, align 4 -> 0 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 0 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 0 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %arg13 = load i32, ptr @arg1, align 4 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %18 = or i1 %17, %16 -> 0 
    %a4 = load i32, ptr %a, align 4 -> 0 
    %arg1 = load i32, ptr @arg1, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 0 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 0 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %17 = icmp sge i32 %a8, 16 -> 0 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_0
check_redundant: obc_check_1
============
[j]  Function: main
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: entry
  store i32 82, ptr @arg2, align 4
  call void @go()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 82, ptr @arg2, align 4
[j]  Store Global Const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @go()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg2 = global i32 0 -> 82 
  }
}

[j]  worklist after push :
[j]  Function: main changed the state
[j]  global_state: ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg2 = global i32 0 -> 82 
  @output_var = global i32 0 -> TOP
  @arg1 = global i32 0 -> TOP
  }
}

============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
============
[j]  Function: funcA0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA2
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcA3
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = sdiv i32 %a3, 3
[j]  BinaryOperator:   %3 = sdiv i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = sdiv i32 %a2, 2
[j]  BinaryOperator:   %2 = sdiv i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 0 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = sdiv i32 %a2, 2 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 0 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %3 = sdiv i32 %a3, 3 -> TOP
    %2 = sdiv i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = mul i32 %a3, 3
[j]  BinaryOperator:   %3 = mul i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = mul i32 %a2, 2
[j]  BinaryOperator:   %2 = mul i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a = alloca i32, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = srem i32 %a1, 2
[j]  BinaryOperator:   %0 = srem i32 %a1, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %0, 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if, label %else
[j]  Other inst:   br i1 %1, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a3 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = mul i32 %a3, 3
[j]  BinaryOperator:   %3 = mul i32 %a3, 3
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %3, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = mul i32 %a2, 2
[j]  BinaryOperator:   %2 = mul i32 %a2, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %0, 1 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  worklist after push :
	merge
------------calc
[j]  BB: merge
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = mul i32 %a2, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %a = alloca i32, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg1 = global i32 0 -> TOP
    %a4 = load i32, ptr %a, align 4 -> TOP
    %1 = icmp eq i32 %0, 1 -> TOP
    %a2 = load i32, ptr %a, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> TOP
    %a3 = load i32, ptr %a, align 4 -> TOP
    %a = alloca i32, align 4 -> TOP
    %3 = mul i32 %a3, 3 -> TOP
    %0 = srem i32 %a1, 2 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> TOP
    %2 = mul i32 %a2, 2 -> TOP
  }
}

[j]  worklist after push :
============
[j]  Function: go
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: cond
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: body
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: merge
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: not found, set to TOP
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
    %x15 = load i32, ptr %25, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %16 = icmp slt i32 %a8, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %17 = icmp sge i32 %a8, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %18 = or i1 %17, %16
[j]  BinaryOperator:   %18 = or i1 %17, %16
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %time10 = load i32, ptr %time, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x15 = load i32, ptr %25, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
  @arg1 = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %23 = icmp sge i32 %b14, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b14 = load i32, ptr %b, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @arg1 = global i32 0 -> TOP
    %18 = or i1 %17, %16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %x9 = load i32, ptr %19, align 4 -> TOP
    %b = alloca i32, align 4 -> TOP
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %18 = or i1 %17, %16 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %x = alloca [16 x i32], align 4
  %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
  store i32 0, ptr %0, align 4
  %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
  store i32 1, ptr %1, align 4
  %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
  store i32 2, ptr %2, align 4
  %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
  store i32 3, ptr %3, align 4
  %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
  store i32 4, ptr %4, align 4
  %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
  store i32 5, ptr %5, align 4
  %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
  store i32 6, ptr %6, align 4
  %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
  store i32 7, ptr %7, align 4
  %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
  store i32 8, ptr %8, align 4
  %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
  store i32 9, ptr %9, align 4
  %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
  store i32 10, ptr %10, align 4
  %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
  store i32 11, ptr %11, align 4
  %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
  store i32 12, ptr %12, align 4
  %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
  store i32 13, ptr %13, align 4
  %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
  store i32 14, ptr %14, align 4
  %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
  store i32 15, ptr %15, align 4
  %a = alloca i32, align 4
  %arg2 = load i32, ptr @arg2, align 4
  store i32 %arg2, ptr %a, align 4
  %b = alloca i32, align 4
  store i32 1, ptr %b, align 4
  %time = alloca i32, align 4
  store i32 1, ptr %time, align 4
  %a1 = load i32, ptr %a, align 4
  store i32 %a1, ptr @arg1, align 4
  call void @funcA0()
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  store i32 %a2, ptr @arg1, align 4
  call void @funcA1()
  %arg13 = load i32, ptr @arg1, align 4
  store i32 %arg13, ptr %a, align 4
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  call void @funcA2()
  %arg15 = load i32, ptr @arg1, align 4
  store i32 %arg15, ptr %a, align 4
  %a6 = load i32, ptr %a, align 4
  store i32 %a6, ptr @arg1, align 4
  call void @funcA3()
  %arg17 = load i32, ptr @arg1, align 4
  store i32 %arg17, ptr %a, align 4
  %a8 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = alloca [16 x i32], align 4
[j]  Other inst:   %x = alloca [16 x i32], align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %1, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %2, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 3, ptr %3, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %4, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 5, ptr %5, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %6, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %7, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 8, ptr %8, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 9, ptr %9, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 10, ptr %10, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 11, ptr %11, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 12, ptr %12, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 13, ptr %13, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 14, ptr %14, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 15, ptr %15, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg2 = load i32, ptr @arg2, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg2, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time = alloca i32, align 4
[j]  Other inst:   %time = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 1, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a1 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a1, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA0()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg1 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a2, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA1()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg13 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg13, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a4 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a4, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA2()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg15 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg15, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a6 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %a6, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA3()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg17 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg17, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a8 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a8 = load i32, ptr %a, align 4 -> 82 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %16 = icmp slt i32 %a8, 0
[j]  icmp:   %16 = icmp slt i32 %a8, 0
[j]  val1: 82 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %17 = icmp sge i32 %a8, 16
[j]  icmp:   %17 = icmp sge i32 %a8, 16
[j]  val1: 82 val2: 16 res: 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %18 = or i1 %17, %16
[j]  BinaryOperator:   %18 = or i1 %17, %16
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 1 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %18, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %18 = or i1 %17, %16 -> 1 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %17 = icmp sge i32 %a8, 16 -> 1 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x9 = load i32, ptr %19, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x9, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a1 = load i32, ptr %a, align 4 -> 82 
    %time = alloca i32, align 4 -> 1 
    %b = alloca i32, align 4 -> 1 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> 1 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> 1 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> 82 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %17 = icmp sge i32 %a8, 16 -> 1 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> 1 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %x9 = load i32, ptr %19, align 4 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
  }
}

[j]  worklist after push :
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %b11 = load i32, ptr %b, align 4 -> TOP
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @output_var = global i32 0 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	merge
------------calc
[j]  BB: merge
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b14 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %22 = icmp slt i32 %b14, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %23 = icmp sge i32 %b14, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %24 = or i1 %23, %22
[j]  BinaryOperator:   %24 = or i1 %23, %22
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %24, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x15 = load i32, ptr %25, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x15, ptr @output_var, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  @output_var = global i32 0 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x15 = load i32, ptr %25, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14 -> TOP
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  }
}

[j]  worklist after push :
	obc_err_0
	body
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  @output_var = global i32 0 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %time = alloca i32, align 4 -> TOP
    %23 = icmp sge i32 %b14, 16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %b = alloca i32, align 4 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %22 = icmp slt i32 %b14, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %17 = icmp sge i32 %a8, 16 -> TOP
    %22 = icmp slt i32 %b14, 0 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> TOP
    %b = alloca i32, align 4 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %18 = or i1 %17, %16 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %23 = icmp sge i32 %b14, 16 -> TOP
    %time = alloca i32, align 4 -> TOP
    %24 = or i1 %23, %22 -> TOP
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
  @output_var = global i32 0 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %b14 = load i32, ptr %b, align 4 -> TOP
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
  }
}

[j]  worklist after push :
	obc_err_0
	body
------------calc
[j]  BB: body
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b11 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %b11, ptr @arg1, align 4
[j]  Store Global Var
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg112 = load i32, ptr @arg1, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg112, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time13 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %21 = sub i32 %time13, 1
[j]  BinaryOperator:   %21 = sub i32 %time13, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %21, ptr %time, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %cond
[j]  Other inst:   br label %cond
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %16 = icmp slt i32 %a8, 0 -> TOP
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %b = alloca i32, align 4 -> TOP
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
  @arg1 = global i32 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
  }
}

[j]  worklist after push :
	obc_err_0
	cond
------------calc
[j]  BB: cond
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  ConstantPropagator.cpp merge 702
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %time10 = load i32, ptr %time, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %20 = icmp sgt i32 %time10, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %20, label %body, label %merge
[j]  Other inst:   br i1 %20, label %body, label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %a1 = load i32, ptr %a, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> TOP
    %17 = icmp sge i32 %a8, 16 -> TOP
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %x9 = load i32, ptr %19, align 4 -> TOP
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %b11 = load i32, ptr %b, align 4 -> TOP
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> TOP
    %b = alloca i32, align 4 -> TOP
    %a1 = load i32, ptr %a, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8 -> TOP
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> TOP
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> TOP
    %21 = sub i32 %time13, 1 -> TOP
  @output_var = global i32 0 -> TOP
    %arg112 = load i32, ptr @arg1, align 4 -> TOP
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %time13 = load i32, ptr %time, align 4 -> TOP
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %20 = icmp sgt i32 %time10, 0 -> TOP
    %time = alloca i32, align 4 -> TOP
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> TOP
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %time10 = load i32, ptr %time, align 4 -> TOP
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp merge 702
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %a1 = load i32, ptr %a, align 4 -> 82 
    %time = alloca i32, align 4 -> 1 
    %b = alloca i32, align 4 -> 1 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %17 = icmp sge i32 %a8, 16 -> 1 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %18 = or i1 %17, %16 -> 1 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a = alloca i32, align 4 -> 82 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %a8 = load i32, ptr %a, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %arg15 = load i32, ptr @arg1, align 4 -> 82 
    %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7 -> 7 
    %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1 -> 1 
    %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11 -> 11 
    %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13 -> 13 
    %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2 -> 2 
    %arg2 = load i32, ptr @arg2, align 4 -> 82 
  @arg1 = global i32 0 -> 82 
    %a8 = load i32, ptr %a, align 4 -> 82 
    %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10 -> 10 
    %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3 -> 3 
    %a = alloca i32, align 4 -> 82 
    %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4 -> 4 
    %a6 = load i32, ptr %a, align 4 -> 82 
    %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0 -> 0 
    %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6 -> 6 
    %arg13 = load i32, ptr @arg1, align 4 -> 82 
    %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15 -> 15 
    %16 = icmp slt i32 %a8, 0 -> 0 
    %18 = or i1 %17, %16 -> 1 
    %a4 = load i32, ptr %a, align 4 -> 82 
    %arg1 = load i32, ptr @arg1, align 4 -> 82 
    %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5 -> 5 
    %arg17 = load i32, ptr @arg1, align 4 -> 82 
    %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9 -> 9 
    %a2 = load i32, ptr %a, align 4 -> 82 
    %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12 -> 12 
    %17 = icmp sge i32 %a8, 16 -> 1 
    %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8 -> 8 
    %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14 -> 14 
    %b = alloca i32, align 4 -> 1 
    %time = alloca i32, align 4 -> 1 
    %a1 = load i32, ptr %a, align 4 -> 82 
  }
}

[j]  worklist after push :
check_redundant: obc_check_0
check_redundant: obc_check_1
============
[j]  Function: main
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compForwardDataflow 107
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 743
------------calc
[j]  BB: entry
  store i32 82, ptr @arg2, align 4
  call void @go()
  ret void
[j]  ConstantPropagator.cpp initGlobal 743
[j]  Dataflow.h compDFVal 62
[j]  ConstantPropagator.cpp initGlobal 743
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 82, ptr @arg2, align 4
[j]  Store Global Const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @go()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg2 = global i32 0 -> 82 
  }
}

[j]  worklist after push :
check_redundant: 

obc_check_0:                                      ; preds = %entry
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0


obc_check_1:                                      ; preds = %merge
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1
put KSet Size:

[+]SAFEC IR GEN BEGIN[+]
Module Name 16.c

[j]  ConstantPropagator.cpp removeRedundant 878
============== Remove Start ==============
idx:   in [0, 16)
Index val:82 
idx:   in [0, 16)
Index val:TOP
; ModuleID = '16.c'
source_filename = "16.c"

@input_var = global i32 0
@output_var = global i32 0
@arg0 = global i32 0
@arg1 = global i32 0
@arg2 = global i32 0
@line = global i32 0
@pos = global i32 0
@str = global [17 x i8] c"SafeC IR Builder\00"

declare void @input_impl(ptr)

declare void @output_impl(ptr)

declare void @obc_check_error_impl(ptr, ptr)

define void @input() {
entry:
  call void @input_impl(ptr @input_var)
  ret void
}

define void @output() {
entry:
  call void @output_impl(ptr @output_var)
  ret void
}

define void @obc_check_error() {
entry:
  call void @obc_check_error_impl(ptr @line, ptr @pos, ptr @str)
  ret void
}

define void @funcA0() {
entry:
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else

if:                                               ; preds = %entry
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge

else:                                             ; preds = %entry
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge

merge:                                            ; preds = %else, %if
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
}

define void @funcA1() {
entry:
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else

if:                                               ; preds = %entry
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge

else:                                             ; preds = %entry
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge

merge:                                            ; preds = %else, %if
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
}

define void @funcA2() {
entry:
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else

if:                                               ; preds = %entry
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge

else:                                             ; preds = %entry
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge

merge:                                            ; preds = %else, %if
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
}

define void @funcA3() {
entry:
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %if, label %else

if:                                               ; preds = %entry
  %a2 = load i32, ptr %a, align 4
  %2 = sdiv i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge

else:                                             ; preds = %entry
  %a3 = load i32, ptr %a, align 4
  %3 = sdiv i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge

merge:                                            ; preds = %else, %if
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
}

define void @funcB() {
entry:
  %a = alloca i32, align 4
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a1 = load i32, ptr %a, align 4
  %0 = srem i32 %a1, 2
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %if, label %else

if:                                               ; preds = %entry
  %a2 = load i32, ptr %a, align 4
  %2 = mul i32 %a2, 2
  store i32 %2, ptr %a, align 4
  br label %merge

else:                                             ; preds = %entry
  %a3 = load i32, ptr %a, align 4
  %3 = mul i32 %a3, 3
  store i32 %3, ptr %a, align 4
  br label %merge

merge:                                            ; preds = %else, %if
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  ret void
}

define void @go() {
entry:
  %x = alloca [16 x i32], align 4
  %0 = getelementptr [16 x i32], ptr %x, i32 0, i32 0
  store i32 0, ptr %0, align 4
  %1 = getelementptr [16 x i32], ptr %x, i32 0, i32 1
  store i32 1, ptr %1, align 4
  %2 = getelementptr [16 x i32], ptr %x, i32 0, i32 2
  store i32 2, ptr %2, align 4
  %3 = getelementptr [16 x i32], ptr %x, i32 0, i32 3
  store i32 3, ptr %3, align 4
  %4 = getelementptr [16 x i32], ptr %x, i32 0, i32 4
  store i32 4, ptr %4, align 4
  %5 = getelementptr [16 x i32], ptr %x, i32 0, i32 5
  store i32 5, ptr %5, align 4
  %6 = getelementptr [16 x i32], ptr %x, i32 0, i32 6
  store i32 6, ptr %6, align 4
  %7 = getelementptr [16 x i32], ptr %x, i32 0, i32 7
  store i32 7, ptr %7, align 4
  %8 = getelementptr [16 x i32], ptr %x, i32 0, i32 8
  store i32 8, ptr %8, align 4
  %9 = getelementptr [16 x i32], ptr %x, i32 0, i32 9
  store i32 9, ptr %9, align 4
  %10 = getelementptr [16 x i32], ptr %x, i32 0, i32 10
  store i32 10, ptr %10, align 4
  %11 = getelementptr [16 x i32], ptr %x, i32 0, i32 11
  store i32 11, ptr %11, align 4
  %12 = getelementptr [16 x i32], ptr %x, i32 0, i32 12
  store i32 12, ptr %12, align 4
  %13 = getelementptr [16 x i32], ptr %x, i32 0, i32 13
  store i32 13, ptr %13, align 4
  %14 = getelementptr [16 x i32], ptr %x, i32 0, i32 14
  store i32 14, ptr %14, align 4
  %15 = getelementptr [16 x i32], ptr %x, i32 0, i32 15
  store i32 15, ptr %15, align 4
  %a = alloca i32, align 4
  %arg2 = load i32, ptr @arg2, align 4
  store i32 %arg2, ptr %a, align 4
  %b = alloca i32, align 4
  store i32 1, ptr %b, align 4
  %time = alloca i32, align 4
  store i32 1, ptr %time, align 4
  %a1 = load i32, ptr %a, align 4
  store i32 %a1, ptr @arg1, align 4
  call void @funcA0()
  %arg1 = load i32, ptr @arg1, align 4
  store i32 %arg1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  store i32 %a2, ptr @arg1, align 4
  call void @funcA1()
  %arg13 = load i32, ptr @arg1, align 4
  store i32 %arg13, ptr %a, align 4
  %a4 = load i32, ptr %a, align 4
  store i32 %a4, ptr @arg1, align 4
  call void @funcA2()
  %arg15 = load i32, ptr @arg1, align 4
  store i32 %arg15, ptr %a, align 4
  %a6 = load i32, ptr %a, align 4
  store i32 %a6, ptr @arg1, align 4
  call void @funcA3()
  %arg17 = load i32, ptr @arg1, align 4
  store i32 %arg17, ptr %a, align 4
  %a8 = load i32, ptr %a, align 4
  br label %obc_check_0

obc_check_0:                                      ; preds = %entry
  %16 = icmp slt i32 %a8, 0
  %17 = icmp sge i32 %a8, 16
  %18 = or i1 %17, %16
  br i1 %18, label %obc_err_0, label %obc_ok_0

obc_err_0:                                        ; preds = %obc_check_0
  store i32 99, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void

obc_ok_0:                                         ; preds = %obc_check_0
  %19 = getelementptr [16 x i32], ptr %x, i32 0, i32 %a8
  %x9 = load i32, ptr %19, align 4
  store i32 %x9, ptr @output_var, align 4
  call void @output()
  br label %cond

cond:                                             ; preds = %body, %obc_ok_0
  %time10 = load i32, ptr %time, align 4
  %20 = icmp sgt i32 %time10, 0
  br i1 %20, label %body, label %merge

body:                                             ; preds = %cond
  %b11 = load i32, ptr %b, align 4
  store i32 %b11, ptr @arg1, align 4
  call void @funcB()
  %arg112 = load i32, ptr @arg1, align 4
  store i32 %arg112, ptr %b, align 4
  %time13 = load i32, ptr %time, align 4
  %21 = sub i32 %time13, 1
  store i32 %21, ptr %time, align 4
  br label %cond

merge:                                            ; preds = %cond
  %b14 = load i32, ptr %b, align 4
  br label %obc_check_1

obc_check_1:                                      ; preds = %merge
  %22 = icmp slt i32 %b14, 0
  %23 = icmp sge i32 %b14, 16
  %24 = or i1 %23, %22
  br i1 %24, label %obc_err_1, label %obc_ok_1

obc_err_1:                                        ; preds = %obc_check_1
  store i32 110, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void

obc_ok_1:                                         ; preds = %obc_check_1
  %25 = getelementptr [16 x i32], ptr %x, i32 0, i32 %b14
  %x15 = load i32, ptr %25, align 4
  store i32 %x15, ptr @output_var, align 4
  call void @output()
  ret void
}

define void @main() {
entry:
  store i32 82, ptr @arg2, align 4
  call void @go()
  ret void
}

[+]SAFEC IR GEN END[+]

[+]SAFEC EXECUTE BEGIN[+]
output:2
output:2

[+]SAFEC EXECUTE END[+]
