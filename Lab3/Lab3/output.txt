[j]  ConstantPropagator.cpp runOnModule 774
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
============
[j]  Function: funcA
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  @output_var = global i32 0 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = add i32 %0, 1
[j]  BinaryOperator:   %1 = add i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 1 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 1 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> 1 
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  @output_var = global i32 0 -> 1 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %x = load i32, ptr %5, align 4 -> 1 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
============
[j]  Function: funcA
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  @output_var = global i32 0 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = add i32 %0, 1
[j]  BinaryOperator:   %1 = add i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 1 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 1 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> 1 
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  @output_var = global i32 0 -> 1 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %x = load i32, ptr %5, align 4 -> 1 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_0
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %b = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %b, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = sub i32 %0, 1
  store i32 %1, ptr %b, align 4
  %b2 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = sub i32 %0, 1
[j]  BinaryOperator:   %1 = sub i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b2 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %b = alloca i32, align 4 -> -1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: -1 val2: 0 res: 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: -1 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %b = alloca i32, align 4 -> -1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %4 = or i1 %3, %2 -> 1 
    %b = alloca i32, align 4 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %1 = sub i32 %0, 1 -> -1 
    %b2 = load i32, ptr %b, align 4 -> -1 
  }
}

[j]  worklist after push :
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %4 = or i1 %3, %2 -> 1 
    %b = alloca i32, align 4 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %1 = sub i32 %0, 1 -> -1 
    %b2 = load i32, ptr %b, align 4 -> -1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
  @output_var = global i32 0 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> -1 
    %b = alloca i32, align 4 -> -1 
    %4 = or i1 %3, %2 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %x = load i32, ptr %5, align 4 -> -1 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %4 = or i1 %3, %2 -> 1 
    %b = alloca i32, align 4 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %1 = sub i32 %0, 1 -> -1 
    %b2 = load i32, ptr %b, align 4 -> -1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %b = alloca i32, align 4 -> -1 
    %4 = or i1 %3, %2 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
============
[j]  Function: funcA
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  @output_var = global i32 0 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = add i32 %0, 1
[j]  BinaryOperator:   %1 = add i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 1 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 1 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> 1 
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  @output_var = global i32 0 -> 1 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %x = load i32, ptr %5, align 4 -> 1 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %1 = add i32 %0, 1 -> 1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %a = alloca i32, align 4 -> 1 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_0
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %b = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %b, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = sub i32 %0, 1
  store i32 %1, ptr %b, align 4
  %b2 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = sub i32 %0, 1
[j]  BinaryOperator:   %1 = sub i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b2 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %b = alloca i32, align 4 -> -1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  worklist after push :
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: -1 val2: 0 res: 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: -1 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %b = alloca i32, align 4 -> -1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %4 = or i1 %3, %2 -> 1 
    %b = alloca i32, align 4 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %1 = sub i32 %0, 1 -> -1 
    %b2 = load i32, ptr %b, align 4 -> -1 
  }
}

[j]  worklist after push :
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %4 = or i1 %3, %2 -> 1 
    %b = alloca i32, align 4 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %1 = sub i32 %0, 1 -> -1 
    %b2 = load i32, ptr %b, align 4 -> -1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
  @output_var = global i32 0 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> -1 
    %b = alloca i32, align 4 -> -1 
    %4 = or i1 %3, %2 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %x = load i32, ptr %5, align 4 -> -1 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %0 = mul i32 %arg01, 2 -> 0 
    %4 = or i1 %3, %2 -> 1 
    %b = alloca i32, align 4 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %1 = sub i32 %0, 1 -> -1 
    %b2 = load i32, ptr %b, align 4 -> -1 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 
    %1 = sub i32 %0, 1 -> -1 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 
    %b = alloca i32, align 4 -> -1 
    %4 = or i1 %3, %2 -> 1 
    %0 = mul i32 %arg01, 2 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_1
============
[j]  Function: main
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if4
[j]  worklist:
	entry
	if
	else
	merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else5
[j]  worklist:
	entry
	if
	else
	merge
	if4
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge6
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if9
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else10
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge11
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if14
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else15
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge16
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 2 
    %x18 = load i32, ptr %x, align 4 -> 2 
    %x17 = load i32, ptr %x, align 4 -> 2 
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 
    %x18 = load i32, ptr %x, align 4 -> 0 2 
    %x17 = load i32, ptr %x, align 4 -> 0 2 
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
------------calc
[j]  BB: else5
  store i32 6, ptr %x, align 4
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
------------calc
[j]  BB: if4
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var7 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var7, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond8 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp eq i32 %cond8, 97
[j]  icmp:   %2 = icmp eq i32 %cond8, 97
[j]  val1: 0 val2: 97 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %2, label %if9, label %else10
[j]  Other inst:   br i1 %2, label %if9, label %else10
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 4 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  store i32 7, ptr %x, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 7 
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 7 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  call void @input()
  %input_var2 = load i32, ptr @input_var, align 4
  store i32 %input_var2, ptr %cond, align 4
  %cond3 = load i32, ptr %cond, align 4
  %1 = icmp eq i32 %cond3, 108
  br i1 %1, label %if4, label %else5
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var2 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var2, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond3 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %cond3, 108
[j]  icmp:   %1 = icmp eq i32 %cond3, 108
[j]  val1: 0 val2: 108 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if4, label %else5
[j]  Other inst:   br i1 %1, label %if4, label %else5
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if4
	else5
------------calc
[j]  BB: else5
  store i32 6, ptr %x, align 4
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 6 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	entry
	if4
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if4
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  @arg0 = global i32 0 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	entry
	if4
------------calc
[j]  BB: if4
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var7 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var7, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond8 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp eq i32 %cond8, 97
[j]  icmp:   %2 = icmp eq i32 %cond8, 97
[j]  val1: 0 val2: 97 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %2, label %if9, label %else10
[j]  Other inst:   br i1 %2, label %if9, label %else10
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 4 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  %cond = alloca i32, align 4
  store i32 -1, ptr %cond, align 4
  call void @input()
  %input_var = load i32, ptr @input_var, align 4
  store i32 %input_var, ptr %cond, align 4
  %cond1 = load i32, ptr %cond, align 4
  %0 = icmp eq i32 %cond1, 102
  br i1 %0, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = alloca i32, align 4
[j]  Other inst:   %x = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond = alloca i32, align 4
[j]  Other inst:   %cond = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 -1, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond1 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = icmp eq i32 %cond1, 102
[j]  icmp:   %0 = icmp eq i32 %cond1, 102
[j]  val1: 0 val2: 102 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %0, label %if, label %else
[j]  Other inst:   br i1 %0, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  store i32 7, ptr %x, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 7 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  @arg0 = global i32 0 -> 0 2 4 6 7 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  call void @input()
  %input_var2 = load i32, ptr @input_var, align 4
  store i32 %input_var2, ptr %cond, align 4
  %cond3 = load i32, ptr %cond, align 4
  %1 = icmp eq i32 %cond3, 108
  br i1 %1, label %if4, label %else5
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var2 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var2, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond3 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %cond3, 108
[j]  icmp:   %1 = icmp eq i32 %cond3, 108
[j]  val1: 0 val2: 108 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if4, label %else5
[j]  Other inst:   br i1 %1, label %if4, label %else5
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if4
	else5
------------calc
[j]  BB: else5
  store i32 6, ptr %x, align 4
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 6 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if4
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if4
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
  @arg0 = global i32 0 -> 0 2 4 6 7 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if4
------------calc
[j]  BB: if4
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var7 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var7, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond8 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp eq i32 %cond8, 97
[j]  icmp:   %2 = icmp eq i32 %cond8, 97
[j]  val1: 0 val2: 97 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %2, label %if9, label %else10
[j]  Other inst:   br i1 %2, label %if9, label %else10
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 4 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
============
[j]  Function: funcA
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  @output_var = global i32 0 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = add i32 %0, 1
[j]  BinaryOperator:   %1 = add i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 1 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 5 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 9 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 13 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 15 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 1 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 5 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 9 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 13 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 15 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> 1 5 9 13 15 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  @output_var = global i32 0 -> 1 5 9 13 15 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %x = load i32, ptr %5, align 4 -> 1 5 9 13 15 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
============
[j]  Function: funcA
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  @output_var = global i32 0 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = add i32 %0, 1
[j]  BinaryOperator:   %1 = add i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 1 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 5 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 9 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 13 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 15 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 1 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 5 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 9 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 13 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 15 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> 1 5 9 13 15 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  @output_var = global i32 0 -> 1 5 9 13 15 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %x = load i32, ptr %5, align 4 -> 1 5 9 13 15 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_0
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %b = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %b, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = sub i32 %0, 1
  store i32 %1, ptr %b, align 4
  %b2 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = sub i32 %0, 1
[j]  BinaryOperator:   %1 = sub i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b2 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: -1 val2: 0 res: 1
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 3 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 7 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 11 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 13 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: -1 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 3 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 7 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 11 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 13 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 2
[j]  Or: 0 | 0
[j]  Or: 0 | 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %4 = or i1 %3, %2 -> 0 1 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
  }
}

[j]  worklist after push :
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %4 = or i1 %3, %2 -> 0 1 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
  @output_var = global i32 0 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> -1 3 7 11 13 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %4 = or i1 %3, %2 -> 0 1 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %x = load i32, ptr %5, align 4 -> -1 3 7 11 13 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %4 = or i1 %3, %2 -> 0 1 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %4 = or i1 %3, %2 -> 0 1 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
============
[j]  Function: obc_check_error_impl
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
============
[j]  Function: funcA
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_0
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_0
[j]  worklist:
	entry
	obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_0
[j]  worklist:
	entry
	obc_check_0
	obc_err_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_0
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> TOP
  @output_var = global i32 0 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %2 = icmp slt i32 %a2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %a2, 0 -> TOP
    %3 = icmp sge i32 %a2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_check_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a = alloca i32, align 4
[j]  Other inst:   %a = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = add i32 %0, 1
[j]  BinaryOperator:   %1 = add i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %a, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %a2 = load i32, ptr %a, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_0
[j]  Other inst:   br label %obc_check_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	obc_check_0
------------calc
[j]  BB: obc_check_0
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %a2, 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 1 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 5 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 9 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 13 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %a2, 0
[j]  val1: 15 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %a2, 16
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 1 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 5 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 9 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 13 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %a2, 16
[j]  val1: 15 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 1
[j]  Or: 0 | 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  Other inst:   br i1 %4, label %obc_err_0, label %obc_ok_0
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  worklist after push :
	obc_err_0
	obc_ok_0
------------calc
[j]  BB: obc_ok_0
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2 -> 1 5 9 13 15 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  @output_var = global i32 0 -> 1 5 9 13 15 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %x = load i32, ptr %5, align 4 -> 1 5 9 13 15 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
	obc_err_0
------------calc
[j]  BB: obc_err_0
  store i32 11, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> 0 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = add i32 %0, 1 -> 1 5 9 13 15 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %a = alloca i32, align 4 -> 1 5 9 13 15 
    %3 = icmp sge i32 %a2, 16 -> 0 
    %a2 = load i32, ptr %a, align 4 -> 1 5 9 13 15 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %2 = icmp slt i32 %a2, 0 -> 0 
    %4 = or i1 %3, %2 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_0
============
[j]  Function: funcB
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_check_1
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_err_1
[j]  worklist:
	entry
	obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: obc_ok_1
[j]  worklist:
	entry
	obc_check_1
	obc_err_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_check_1
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  !kset1 || !kset2 || kset1->top || kset2->top
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  GEP: not const
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @output_var = global i32 0 -> TOP
    %x = load i32, ptr %5, align 4 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %4 = or i1 %3, %2 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %2 = icmp slt i32 %b2, 0 -> TOP
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp slt i32 %b2, 0 -> TOP
    %3 = icmp sge i32 %b2, 16 -> TOP
    %4 = or i1 %3, %2 -> TOP
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %b = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %b, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = sub i32 %0, 1
  store i32 %1, ptr %b, align 4
  %b2 = load i32, ptr %b, align 4
  br label %obc_check_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b = alloca i32, align 4
[j]  Other inst:   %b = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg0 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %arg0, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %arg01 = load i32, ptr @arg0, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = mul i32 %arg01, 2
[j]  BinaryOperator:   %0 = mul i32 %arg01, 2
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = sub i32 %0, 1
[j]  BinaryOperator:   %1 = sub i32 %0, 1
[j]  op1 in cvmap
[j]  constOp2
[j]  kset1->const_vals.size() = 5, kset2->const_vals.size() = 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %1, ptr %b, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %b2 = load i32, ptr %b, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %obc_check_1
[j]  Other inst:   br label %obc_check_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	obc_check_1
------------calc
[j]  BB: obc_check_1
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp slt i32 %b2, 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: -1 val2: 0 res: 1
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 3 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 7 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 11 val2: 0 res: 0
[j]  icmp:   %2 = icmp slt i32 %b2, 0
[j]  val1: 13 val2: 0 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp sge i32 %b2, 16
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: -1 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 3 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 7 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 11 val2: 16 res: 0
[j]  icmp:   %3 = icmp sge i32 %b2, 16
[j]  val1: 13 val2: 16 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %4 = or i1 %3, %2
[j]  BinaryOperator:   %4 = or i1 %3, %2
[j]  op1 in cvmap
[j]  op2 in cvmap
[j]  kset1->const_vals.size() = 1, kset2->const_vals.size() = 2
[j]  Or: 0 | 0
[j]  Or: 0 | 1
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  Other inst:   br i1 %4, label %obc_err_1, label %obc_ok_1
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %4 = or i1 %3, %2 -> 0 1 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
  }
}

[j]  worklist after push :
	obc_err_1
	obc_ok_1
------------calc
[j]  BB: obc_ok_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = load i32, ptr %5, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x, ptr @output_var, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @output()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %4 = or i1 %3, %2 -> 0 1 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
  @output_var = global i32 0 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2 -> -1 3 7 11 13 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %4 = or i1 %3, %2 -> 0 1 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %x = load i32, ptr %5, align 4 -> -1 3 7 11 13 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
	obc_err_1
------------calc
[j]  BB: obc_err_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp sge i32 %b2, 16 -> 0 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %4 = or i1 %3, %2 -> 0 1 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %b2 = load i32, ptr %b, align 4 -> -1 3 7 11 13 
    %1 = sub i32 %0, 1 -> -1 3 7 11 13 
    %arg01 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %b = alloca i32, align 4 -> -1 3 7 11 13 
    %4 = or i1 %3, %2 -> 0 1 
    %0 = mul i32 %arg01, 2 -> 0 4 8 12 14 
    %arg0 = load i32, ptr @arg0, align 4 -> 0 2 4 6 7 
    %2 = icmp slt i32 %b2, 0 -> 0 1 
    %3 = icmp sge i32 %b2, 16 -> 0 
  }
}

[j]  worklist after push :
check_redundant: obc_check_1
============
[j]  Function: main
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compForwardDataflow 105
------------init
[j]  BB: entry
[j]  worklist:
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if
[j]  worklist:
	entry
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else
[j]  worklist:
	entry
	if
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge
[j]  worklist:
	entry
	if
	else
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if4
[j]  worklist:
	entry
	if
	else
	merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else5
[j]  worklist:
	entry
	if
	else
	merge
	if4
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge6
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if9
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else10
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge11
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: if14
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: else15
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------init
[j]  BB: merge16
[j]  worklist:
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp initGlobal 735
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 2 
    %x18 = load i32, ptr %x, align 4 -> 2 
    %x17 = load i32, ptr %x, align 4 -> 2 
    %x = alloca i32, align 4 -> 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 
    %x18 = load i32, ptr %x, align 4 -> 0 2 
    %x17 = load i32, ptr %x, align 4 -> 0 2 
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	else5
------------calc
[j]  BB: else5
  store i32 6, ptr %x, align 4
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %cond = alloca i32, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if4
------------calc
[j]  BB: if4
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var7 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var7, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond8 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp eq i32 %cond8, 97
[j]  icmp:   %2 = icmp eq i32 %cond8, 97
[j]  val1: 0 val2: 97 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %2, label %if9, label %else10
[j]  Other inst:   br i1 %2, label %if9, label %else10
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 4 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
	else
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
  }
}

[j]  worklist after push :
	entry
	if
	else
------------calc
[j]  BB: else
  store i32 7, ptr %x, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 7 
  }
}

[j]  worklist after push :
	entry
	if
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
  @arg0 = global i32 0 -> 0 2 4 6 7 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if
------------calc
[j]  BB: if
  call void @input()
  %input_var2 = load i32, ptr @input_var, align 4
  store i32 %input_var2, ptr %cond, align 4
  %cond3 = load i32, ptr %cond, align 4
  %1 = icmp eq i32 %cond3, 108
  br i1 %1, label %if4, label %else5
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var2 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var2, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond3 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %cond3, 108
[j]  icmp:   %1 = icmp eq i32 %cond3, 108
[j]  val1: 0 val2: 108 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if4, label %else5
[j]  Other inst:   br i1 %1, label %if4, label %else5
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	entry
	if4
	else5
------------calc
[j]  BB: else5
  store i32 6, ptr %x, align 4
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 6 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	entry
	if4
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if4
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  @arg0 = global i32 0 -> 0 2 4 6 7 
  }
}

[j]  worklist after push :
	entry
	if4
------------calc
[j]  BB: if4
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var7 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var7, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond8 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp eq i32 %cond8, 97
[j]  icmp:   %2 = icmp eq i32 %cond8, 97
[j]  val1: 0 val2: 97 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %2, label %if9, label %else10
[j]  Other inst:   br i1 %2, label %if9, label %else10
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 4 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	entry
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	entry
------------calc
[j]  BB: entry
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  %cond = alloca i32, align 4
  store i32 -1, ptr %cond, align 4
  call void @input()
  %input_var = load i32, ptr @input_var, align 4
  store i32 %input_var, ptr %cond, align 4
  %cond1 = load i32, ptr %cond, align 4
  %0 = icmp eq i32 %cond1, 102
  br i1 %0, label %if, label %else
[j]  ConstantPropagator.cpp initGlobal 735
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x = alloca i32, align 4
[j]  Other inst:   %x = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond = alloca i32, align 4
[j]  Other inst:   %cond = alloca i32, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 -1, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond1 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %0 = icmp eq i32 %cond1, 102
[j]  icmp:   %0 = icmp eq i32 %cond1, 102
[j]  val1: 0 val2: 102 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %0, label %if, label %else
[j]  Other inst:   br i1 %0, label %if, label %else
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  worklist after push :
	if
	else
------------calc
[j]  BB: else
  store i32 7, ptr %x, align 4
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 7, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 7 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  @arg0 = global i32 0 -> 0 2 4 6 7 
    %3 = icmp eq i32 %cond13, 103 -> 0 
  }
}

[j]  worklist after push :
	if
------------calc
[j]  BB: if
  call void @input()
  %input_var2 = load i32, ptr @input_var, align 4
  store i32 %input_var2, ptr %cond, align 4
  %cond3 = load i32, ptr %cond, align 4
  %1 = icmp eq i32 %cond3, 108
  br i1 %1, label %if4, label %else5
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var2 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var2, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond3 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %1 = icmp eq i32 %cond3, 108
[j]  icmp:   %1 = icmp eq i32 %cond3, 108
[j]  val1: 0 val2: 108 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %1, label %if4, label %else5
[j]  Other inst:   br i1 %1, label %if4, label %else5
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if4
	else5
------------calc
[j]  BB: else5
  store i32 6, ptr %x, align 4
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 6, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 6 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if4
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if4
	merge
------------calc
[j]  BB: merge
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x17 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x17, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcA()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %x18 = load i32, ptr %x, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %x18, ptr @arg0, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @funcB()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   ret void
[j]  Other inst:   ret void
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x18 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
    %x17 = load i32, ptr %x, align 4 -> 0 2 4 6 7 
  @arg0 = global i32 0 -> 0 2 4 6 7 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 7 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if4
------------calc
[j]  BB: if4
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var7 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var7, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond8 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %2 = icmp eq i32 %cond8, 97
[j]  icmp:   %2 = icmp eq i32 %cond8, 97
[j]  val1: 0 val2: 97 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %2, label %if9, label %else10
[j]  Other inst:   br i1 %2, label %if9, label %else10
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if9
	else10
------------calc
[j]  BB: else10
  store i32 4, ptr %x, align 4
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 4, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 4 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	if9
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if9
	merge6
------------calc
[j]  BB: merge6
  br label %merge
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge
[j]  Other inst:   br label %merge
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 6 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
  }
}

[j]  worklist after push :
	if9
------------calc
[j]  BB: if9
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   call void @input()
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %input_var12 = load i32, ptr @input_var, align 4
[j]  Load: global
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 %input_var12, ptr %cond, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %cond13 = load i32, ptr %cond, align 4
[j]  Load: from cvmap
[j]  ConstantPropagator.cpp compDFVal 65 inst:   %3 = icmp eq i32 %cond13, 103
[j]  icmp:   %3 = icmp eq i32 %cond13, 103
[j]  val1: 0 val2: 103 res: 0
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br i1 %3, label %if14, label %else15
[j]  Other inst:   br i1 %3, label %if14, label %else15
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  worklist after push :
	if14
	else15
------------calc
[j]  BB: else15
  store i32 2, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 2, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	if14
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	if14
	merge11
------------calc
[j]  BB: merge11
  br label %merge6
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge6
[j]  Other inst:   br label %merge6
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 2 4 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
  }
}

[j]  worklist after push :
	if14
------------calc
[j]  BB: if14
  store i32 0, ptr %x, align 4
  br label %merge16
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   store i32 0, ptr %x, align 4
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge16
[j]  Other inst:   br label %merge16
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %x = alloca i32, align 4 -> 0 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
	merge16
------------calc
[j]  BB: merge16
  br label %merge11
[j]  ConstantPropagator.cpp initGlobal 735
[j]  ConstantPropagator.cpp merge 694
[j]  ConstantPropagator.cpp merge 694
[j]  Dataflow.h compDFVal 60
[j]  ConstantPropagator.cpp compDFVal 65 inst:   br label %merge11
[j]  Other inst:   br label %merge11
[j]  in:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
  }
}

[j]  out:
ConstValueState {
  ConstValueMap: ConstValueMap {
    %x = alloca i32, align 4 -> 0 2 
    %input_var12 = load i32, ptr @input_var, align 4 -> 0 
    %1 = icmp eq i32 %cond3, 108 -> 0 
    %cond13 = load i32, ptr %cond, align 4 -> 0 
    %3 = icmp eq i32 %cond13, 103 -> 0 
    %2 = icmp eq i32 %cond8, 97 -> 0 
    %cond8 = load i32, ptr %cond, align 4 -> 0 
    %cond1 = load i32, ptr %cond, align 4 -> 0 
    %input_var = load i32, ptr @input_var, align 4 -> 0 
    %input_var2 = load i32, ptr @input_var, align 4 -> 0 
    %0 = icmp eq i32 %cond1, 102 -> 0 
    %cond = alloca i32, align 4 -> 0 
    %cond3 = load i32, ptr %cond, align 4 -> 0 
    %input_var7 = load i32, ptr @input_var, align 4 -> 0 
  }
}

[j]  worklist after push :
check_redundant: 

obc_check_0:                                      ; preds = %entry
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0


obc_check_1:                                      ; preds = %entry
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1

[j]  ConstantPropagator.cpp removeRedundant 864
============== Remove Start ==============
idx:   in [0, 16)
Index val:1 5 9 13 15 
Removing:
obc_check_0:                                      ; preds = %entry
  %2 = icmp slt i32 %a2, 0
  %3 = icmp sge i32 %a2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_0, label %obc_ok_0
input KSet Size:

[+]SAFEC IR GEN BEGIN[+]
Module Name 9.c

idx:   in [0, 16)
Index val:-1 3 7 11 13 
; ModuleID = '9.c'
source_filename = "9.c"

@input_var = global i32 0
@output_var = global i32 0
@arg0 = global i32 0
@arg1 = global i32 0
@arg2 = global i32 0
@line = global i32 0
@pos = global i32 0
@str = global [17 x i8] c"SafeC IR Builder\00"
@x = global i32 [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15]

declare void @input_impl(ptr)

declare void @output_impl(ptr)

declare void @obc_check_error_impl(ptr, ptr)

define void @input() {
entry:
  call void @input_impl(ptr @input_var)
  ret void
}

define void @output() {
entry:
  call void @output_impl(ptr @output_var)
  ret void
}

define void @obc_check_error() {
entry:
  call void @obc_check_error_impl(ptr @line, ptr @pos, ptr @str)
  ret void
}

define void @funcA() {
entry:
  %a = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %a, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = add i32 %0, 1
  store i32 %1, ptr %a, align 4
  %a2 = load i32, ptr %a, align 4
  br label %obc_ok_0

obc_ok_0:                                         ; preds = %entry
  %2 = getelementptr [16 x i32], ptr @x, i32 0, i32 %a2
  %x = load i32, ptr %2, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
}

define void @funcB() {
entry:
  %b = alloca i32, align 4
  %arg0 = load i32, ptr @arg0, align 4
  store i32 %arg0, ptr %b, align 4
  %arg01 = load i32, ptr @arg0, align 4
  %0 = mul i32 %arg01, 2
  %1 = sub i32 %0, 1
  store i32 %1, ptr %b, align 4
  %b2 = load i32, ptr %b, align 4
  br label %obc_check_1

obc_check_1:                                      ; preds = %entry
  %2 = icmp slt i32 %b2, 0
  %3 = icmp sge i32 %b2, 16
  %4 = or i1 %3, %2
  br i1 %4, label %obc_err_1, label %obc_ok_1

obc_err_1:                                        ; preds = %obc_check_1
  store i32 21, ptr @arg0, align 4
  store i32 17, ptr @arg1, align 4
  store [2 x i8] c"x\00", ptr @arg2, align 1
  call void @obc_check_error()
  ret void

obc_ok_1:                                         ; preds = %obc_check_1
  %5 = getelementptr [16 x i32], ptr @x, i32 0, i32 %b2
  %x = load i32, ptr %5, align 4
  store i32 %x, ptr @output_var, align 4
  call void @output()
  ret void
}

define void @main() {
entry:
  %x = alloca i32, align 4
  store i32 0, ptr %x, align 4
  %cond = alloca i32, align 4
  store i32 -1, ptr %cond, align 4
  call void @input()
  %input_var = load i32, ptr @input_var, align 4
  store i32 %input_var, ptr %cond, align 4
  %cond1 = load i32, ptr %cond, align 4
  %0 = icmp eq i32 %cond1, 102
  br i1 %0, label %if, label %else

if:                                               ; preds = %entry
  call void @input()
  %input_var2 = load i32, ptr @input_var, align 4
  store i32 %input_var2, ptr %cond, align 4
  %cond3 = load i32, ptr %cond, align 4
  %1 = icmp eq i32 %cond3, 108
  br i1 %1, label %if4, label %else5

else:                                             ; preds = %entry
  store i32 7, ptr %x, align 4
  br label %merge

merge:                                            ; preds = %else, %merge6
  %x17 = load i32, ptr %x, align 4
  store i32 %x17, ptr @arg0, align 4
  call void @funcA()
  %x18 = load i32, ptr %x, align 4
  store i32 %x18, ptr @arg0, align 4
  call void @funcB()
  ret void

if4:                                              ; preds = %if
  call void @input()
  %input_var7 = load i32, ptr @input_var, align 4
  store i32 %input_var7, ptr %cond, align 4
  %cond8 = load i32, ptr %cond, align 4
  %2 = icmp eq i32 %cond8, 97
  br i1 %2, label %if9, label %else10

else5:                                            ; preds = %if
  store i32 6, ptr %x, align 4
  br label %merge6

merge6:                                           ; preds = %else5, %merge11
  br label %merge

if9:                                              ; preds = %if4
  call void @input()
  %input_var12 = load i32, ptr @input_var, align 4
  store i32 %input_var12, ptr %cond, align 4
  %cond13 = load i32, ptr %cond, align 4
  %3 = icmp eq i32 %cond13, 103
  br i1 %3, label %if14, label %else15

else10:                                           ; preds = %if4
  store i32 4, ptr %x, align 4
  br label %merge11

merge11:                                          ; preds = %else10, %merge16
  br label %merge6

if14:                                             ; preds = %if9
  store i32 0, ptr %x, align 4
  br label %merge16

else15:                                           ; preds = %if9
  store i32 2, ptr %x, align 4
  br label %merge16

merge16:                                          ; preds = %else15, %if14
  br label %merge11
}

[+]SAFEC IR GEN END[+]

[+]SAFEC EXECUTE BEGIN[+]
input:output:15
output:13

[+]SAFEC EXECUTE END[+]
