(compUnit (decl (constDecl const (bType int) (constDef a = (exp (number 3))) ;)) (decl (constDecl const (bType int) (constDef b = (exp (number 4))) , (constDef c = (exp + (exp (number 5)))) , (constDef d = (exp (exp (number 1)) + (exp (number 9)))) ;)) (decl (constDecl const (bType int) (constDef (array (unobcArray e [ (exp (lval a)) ])) = { (exp (number 1)) , (exp (number 2)) , (exp (number 3)) }) ;)) (decl (constDecl const (bType int) (constDef (array (unobcArray f [ ])) = { (exp (number 3)) , (exp (number 0x13)) , (exp - (exp (number 0x19))) }) , (constDef (array (obcArray obc (unobcArray g [ ]))) = { (exp (number 100)) , (exp (number 101)) , (exp (number 102)) , (exp (number 103)) , (exp (number 104)) }) ;)) (funcDef void func ( ) (block { (blockItem (decl (varDecl (bType int) (varDef x = (exp (exp (exp (exp (exp (lval a)) * (exp (lval b))) + (exp (lval c))) % (exp ( (exp (exp (exp (lval d)) + (exp (lval e [ (exp (exp (lval b)) - (exp (number 3))) ]))) * (exp (lval f [ (exp (number 1)) ]))) ))) - (exp (lval g [ (exp (number 3)) ])))) ;))) (blockItem (decl (varDecl (bType int) (varDef (array (unobcArray y [ ])) = { (exp (exp (lval a)) + (exp (lval e [ (exp (number 0)) ]))) , (exp (exp (lval f [ (exp (number 1)) ])) + (exp (lval g [ (exp (number 1)) ]))) }) ;))) })) <EOF>)
