(compUnit (funcDef void func ( ) (block { (blockItem (decl (varDecl (bType int) (varDef x) , (varDef _y = (exp - (exp + - (exp + - (exp (exp - exp) + (exp + (number 20))))))) , (varDef _abcd_1234_ABCD_____ = (exp - (exp (number 0)))) <missing ';'>))) (blockItem (stmt (exp (lval x11)) , obc)) (blockItem (stmt (exp (lval _)) [)) (blockItem (stmt (exp (number 10)) ] =)) (blockItem (stmt (block { (blockItem (stmt (exp (exp (lval _y)) + (exp (lval _abcd_1234_ABCD_____))) ,)) (blockItem (stmt (exp (exp (lval _y)) - (exp (lval _abcd_1234_ABCD_____))) ,)) (blockItem (stmt (exp (exp (lval _y)) * (exp (lval _abcd_1234_ABCD_____))) ,)) (blockItem (stmt (exp (exp (lval _y)) / (exp (lval _abcd_1234_ABCD_____))) } ;)) (blockItem (stmt (exp (lval x) = (exp - (exp (number 0)))) x100 ;)) (blockItem (stmt if ( (cond (exp ( (exp ( (exp ( (exp ( (exp ( (exp ( (exp (exp (lval x)) <= (exp (lval _y))) )) )) )) )) )) ))) ) (stmt ;) else (stmt (block { (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { (blockItem (stmt ;)) }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { }))) (blockItem (stmt (block { (blockItem (stmt (exp (lval _)) [)) (blockItem (stmt (exp (number 8)) ] =)) (blockItem (stmt (exp (lval _)) [)) (blockItem (stmt (exp (number 0)) ] + + + + +)) (blockItem (stmt (exp - (exp - (exp - (exp - (exp - (exp - (exp + - (exp + - (exp + ( (exp ( (exp ( (exp ( (exp ( (exp ( (exp ( (exp ( (exp (lval _)) [)) 1 ]) )) )) )) )) )))))))))) ) ) ))) (blockItem (stmt ;)) }))) (blockItem (stmt ;)) })))) (blockItem (stmt while ( (cond (exp (exp (lval x)) < (exp (lval _abcd_1234_ABCD_____)))) ) (stmt (exp (exp (exp (exp (exp (lval x) = (exp (lval x))) + (exp ( (exp (exp (lval _abcd_1234_ABCD_____)) - (exp (lval x))) ))) / (exp (number 3))) * (exp (number 2))) + (exp (number 1))) ;))) }))) <missing '}'>)) <EOF>)
