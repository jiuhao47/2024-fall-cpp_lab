(compUnit (funcDef void func ( ) (block { (blockItem (decl (varDecl (bType int) (varDef x = (exp (number 0x000000000000000000012345))) , (varDef y = (exp - (exp (number 0xAbCdEf10)))) ;))) (blockItem (decl (varDecl (bType int) (varDef (array (unobcArray y [ (exp (number 16)) ])) = { (exp (number 0)) , (exp + (exp (number 0))) , (exp - (exp (number 0))) , (exp (exp (number 0)) + (exp + (exp (number 0)))) , (exp (exp (number 0)) - (exp - (exp (number 0)))) , (exp + (exp (exp (number 0)) + (exp (number 0)))) , (exp + (exp (exp (number 0)) + (exp + (exp (number 0))))) , (exp + (exp (exp (number 0)) + (exp - (exp (number 0))))) , (exp - (exp (exp (number 0)) + (exp (number 0)))) , (exp - (exp (exp (number 0)) + (exp + (exp (number 0))))) , (exp - (exp (exp (number 0)) + (exp - (exp (number 0))))) }) ;))) (blockItem (stmt if ( (cond (exp (exp (lval x)) == (exp - (exp (exp (lval x)) + (exp (number 2)))))) ) (stmt (exp (lval y [ (exp (exp (exp (number 5)) * (exp (number 2))) - (exp (number 1))) ]) = (exp - (exp (lval y [ (exp (exp (exp (number 5)) - (exp (number 2))) * (exp (number 1))) ])))) ;) else (stmt (block { (blockItem (stmt (block { (blockItem (stmt (exp (lval x) = (exp (number 3))) ;)) }))) (blockItem (stmt (block { (blockItem (decl (varDecl (bType int) (varDef z) ;))) (blockItem (stmt (exp (lval z) = (exp (number 3))) ;)) (blockItem (stmt (exp (lval z) = (exp (number 4))) ;)) (blockItem (stmt (exp (lval z) = (exp (number 5))) ;)) }))) })))) })) <EOF>)
