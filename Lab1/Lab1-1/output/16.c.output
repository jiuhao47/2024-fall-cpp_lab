(compUnit (funcDef void func ( ) (block { (blockItem (decl (varDecl (bType int) (varDef x = (exp - (exp (exp (number 1)) + (exp + (exp (exp (number 2)) - (exp - (exp (exp (number 0x100)) + (exp - (exp (exp (number 0X21)) * (exp (number 9))))))))))) ;))) (blockItem (decl (varDecl (bType int) (varDef (array (unobcArray y [ (exp (number 16)) ])) = { (exp (number 0)) , (exp + (exp (number 0))) , (exp - (exp (number 0))) , (exp (exp (number 0)) + (exp + (exp (number 0)))) , (exp (exp (number 0)) - (exp - (exp (number 0)))) , (exp + (exp (exp (number 0)) + (exp (number 0)))) , (exp + (exp (exp (number 0)) + (exp + (exp (number 0))))) , (exp + (exp (exp (number 0)) + (exp - (exp (number 0))))) , (exp - (exp (exp (number 0)) + (exp (number 0)))) , (exp - (exp (exp (number 0)) + (exp + (exp (number 0))))) , (exp - (exp (exp (number 0)) + (exp - (exp (number 0))))) }) ;))) (blockItem (stmt (exp (exp (lval x) = (exp ( (exp (exp (lval y [ (exp (number 3)) ])) + (exp (number 9))) ))) / (exp ( (exp (exp (number 9)) - (exp - (exp (lval y [ (exp (number 0)) ])))) ))) ;)) (blockItem (stmt (exp (lval x) = (exp + (exp (exp (number 9)) * (exp - (exp (exp (exp (exp (exp (exp (number 9)) / (exp ( (exp (number 1)) ))) % (exp ( (exp (exp (exp (number 0x100)) + (exp (number 9))) * (exp - (exp (number 13)))) ))) - (exp (number 200))) + (exp (lval x))) * (exp (lval y [ (exp (exp (lval x)) * (exp (lval y [ (exp (lval x)) ]))) ]))))))) ;)) })) <EOF>)
